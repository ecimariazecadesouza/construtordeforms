import React, { useState, useEffect } from "react";
import { Form, Response } from "@/entities/all";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { FileText, Users, TrendingUp, AlertCircle } from "lucide-react";
import { motion } from "framer-motion";
import { format } from "date-fns";
import { ptBR } from "date-fns/locale";

import StatsCard from "../components/dashboard/StatsCard";
import RecentForms from "../components/dashboard/RecentForms";
import ResponsesChart from "../components/dashboard/ResponsesChart";

export default function Dashboard() {
  const [forms, setForms] = useState([]);
  const [responses, setResponses] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    setLoading(true);
    try {
      const [formsData, responsesData] = await Promise.all([
        Form.list("-created_date"),
        Response.list("-created_date", 100)
      ]);
      setForms(formsData);
      setResponses(responsesData);
    } catch (error) {
      console.error("Erro ao carregar dados:", error);
    }
    setLoading(false);
  };

  const totalForms = forms.length;
  const totalResponses = responses.length;
  const activeForms = forms.filter(form => form.is_active).length;
  const formsWithLimits = forms.filter(form => 
    form.questions?.some(q => 
      q.options?.some(opt => opt.limit > 0)
    )
  ).length;

  return (
    <div className="p-6 md:p-8 bg-slate-50 min-h-screen">
      <div className="max-w-7xl mx-auto">
        <div className="mb-8">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-center md:text-left"
          >
            <h1 className="text-3xl md:text-4xl font-bold text-slate-900 mb-2">
              Dashboard
            </h1>
            <p className="text-slate-600 text-lg">
              Acompanhe o desempenho dos seus formulários
            </p>
          </motion.div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <StatsCard
            title="Total de Formulários"
            value={totalForms}
            icon={FileText}
            color="blue"
            loading={loading}
          />
          <StatsCard
            title="Formulários Ativos"
            value={activeForms}
            icon={TrendingUp}
            color="green"
            loading={loading}
          />
          <StatsCard
            title="Total de Respostas"
            value={totalResponses}
            icon={Users}
            color="purple"
            loading={loading}
          />
          <StatsCard
            title="Com Limites"
            value={formsWithLimits}
            icon={AlertCircle}
            color="orange"
            loading={loading}
          />
        </div>

        <div className="grid lg:grid-cols-3 gap-6">
          <div className="lg:col-span-2">
            <RecentForms forms={forms} loading={loading} />
          </div>
          <div>
            <ResponsesChart responses={responses} loading={loading} />
          </div>
        </div>
      </div>
    </div>
  );
}
